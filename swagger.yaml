openapi: 3.0.0
info:
  title: GameFit API
  description: RESTful API for the GameFit fitness tracking application with gamification features
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/v1
    description: Development server API v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Exercise:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        type:
          type: string
          enum: [pushup, situp, squat, pullup, burpee, plank, run]
        count:
          type: integer
        intensity:
          type: number
          format: float
        points:
          type: integer
        date:
          type: string
          format: date-time

    ExerciseStats:
      type: object
      properties:
        dates:
          type: array
          items:
            type: string
            format: date
        counts:
          type: array
          items:
            type: integer

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        exercise_points:
          type: integer
        achievements:
          type: array
          items:
            $ref: '#/components/schemas/Achievement'

    Achievement:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        unlocked_at:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    ExerciseLog:
      type: object
      required:
        - exercise_type
        - count
        - date
      properties:
        exercise_type:
          type: string
          enum: [pushup, situp, squat, pullup, burpee, plank, run]
        count:
          type: integer
        date:
          type: string
          format: date

security:
  - bearerAuth: []

paths:
  /users:
    post:
      tags:
        - Users
      security: []
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/token:
    post:
      tags:
        - Authentication
      security: []
      summary: Get authentication token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: "Bearer"
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /exercises:
    get:
      tags:
        - Exercises
      summary: List user exercises
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum: [pushup, situp, squat, pullup, burpee, plank, run]
        - name: from_date
          in: query
          schema:
            type: string
            format: date
        - name: to_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of exercises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exercise'
    post:
      tags:
        - Exercises
      summary: Log new exercise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - count
                - date
              properties:
                type:
                  type: string
                  enum: [pushup, situp, squat, pullup, burpee, plank, run]
                count:
                  type: integer
                date:
                  type: string
                  format: date
                intensity:
                  type: number
                  format: float
      responses:
        '201':
          description: Exercise logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'

  /exercises/{type}/stats:
    get:
      tags:
        - Exercises
      summary: Get exercise statistics
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [pushup, situp, squat, pullup, burpee, plank, run]
        - name: days
          in: query
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: Exercise statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseStats'

  /users/me:
    get:
      tags:
        - Users
      summary: Get current user profile
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/me/achievements:
    get:
      tags:
        - Achievements
      summary: Get user achievements
      responses:
        '200':
          description: List of user achievements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Achievement'

  /leaderboard:
    get:
      tags:
        - Leaderboard
      summary: Get global leaderboard
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Leaderboard entries
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        rank:
                          type: integer
                        user:
                          $ref: '#/components/schemas/User'
                        points:
                          type: integer
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      per_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_items:
                        type: integer 